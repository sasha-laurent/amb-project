<?php

namespace VMB\PresentationBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * MatrixRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MatrixRepository extends EntityRepository
{
	public function findAllWithTopics($user = null)
	{
		$qb = $this
			->createQueryBuilder('m')
			->innerJoin('m.povs', 'pov')
			->addSelect('pov')
			->innerJoin('m.levels', 'lvl')
			->addSelect('lvl')
			->innerJoin('m.topic', 'topic')
			->addSelect('topic')
		;
		
		if($user != null) {
			$qb->andWhere('m.owner = :user')->setParameter('user', $user);
		}

		return $qb
		->getQuery()
		->getResult();
	}
	
	public function getMatrixWithResources($id)
	{
		$qb = $this
			->createQueryBuilder('m')
			->leftJoin('m.povs', 'pov')
			->addSelect('pov')
			->leftJoin('m.levels', 'lvl')
			->addSelect('lvl')
			->leftJoin('m.resources', 'usedR')
			->addSelect('usedR')
			->leftJoin('usedR.resource', 'r')
			->addSelect('r')
			->orderBy('lvl.sort')
			->addOrderBy('pov.sort')
			->where('m.id = :id')
			->setParameter('id', $id)
		;

		return $qb
		->getQuery()
		->getSingleResult();
	}
	
	public function getMatrixWithSortedResources($id)
	{
		$qb = $this
			->createQueryBuilder('m')
			->leftJoin('m.resources', 'usedR')
			->addSelect('usedR')
			->leftJoin('usedR.resource', 'r')
			->addSelect('r')
			->innerJoin('usedR.pov', 'pov')
			->addSelect('pov')
			->innerJoin('usedR.level', 'lvl')
			->addSelect('lvl')
			->orderBy('pov.sort')
			->addorderBy('lvl.sort')
			->where('m.id = :id')
			->setParameter('id', $id)
		;

		return $qb
		->getQuery()
		->getSingleResult();
	}
}
