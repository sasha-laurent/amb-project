{% if copy == false %}
	{% set saveButton = 'true' %}
	{% set entity = presentation %}
{% endif %}
{% extends "::Backend/subPage.html.twig" %}
{% form_theme form 'bootstrap_3_horizontal_layout.html.twig' %}

{% set cellWidth = (830 / matrix.levels|length) %}
{% if cellWidth > 120 %}
	{% set cellWidth = 120 %}
{% endif %}
{% set cellHeight = cellWidth * 9 / 16 %}

{% block body -%}
{# If no resources are included in the presentation's matrix 
	kindly redirect the user to the matrix/show page. #}
{% if matrix.resources.snapshot is empty %}
<p class="text-center bg-warning btn-lg">
	<a href="{{path('matrix_show', {'id' : matrix.id} )}}">{{ 'presentation.is_empty_add_content'|trans|raw }}</a>
</p>
{% endif %}

{{ form_start(form, {'attr': {'id': 'presentation_form', 'class': 'form-horizontal'}}) }}
	<div class="well">
		{# Les erreurs générales du formulaire. #}
		{{ form_errors(form) }}
		<div class="form-group">
			{# Génération du label. #}
			{{ form_label(form.title, "Titre", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}

			{# Affichage des erreurs pour ce champ précis. #}
			{{ form_errors(form.title) }}

			<div class="col-sm-10">
			{# Génération de l'input. #}
			{{ form_widget(form.title, {'attr': {'class': 'form-control'}}) }}
			</div>
		</div>

		{# Idem pour un autre champ. #}
		<div class="form-group">
			{{ form_label(form.description, "Description", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
			{{ form_errors(form.description) }}
			<div class="col-sm-10">
			{{ form_widget(form.description, {'attr': {'class': 'form-control'}}) }}
			</div>
		</div>
		
		<div class="form-group">
			{# Génération du label. #}
			{{ form_label(form.file, "Miniature", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}

			{# Affichage des erreurs pour ce champ précis. #}
			{{ form_errors(form.file) }}

			<div class="col-sm-10">
			{# Génération de l'input. #}
			{{ form_widget(form.file, {'attr': {'class': 'form-control'}}) }}
			</div>
			
		</div>
		{% if not copy %}
			<div class="row">
				<div class="col-sm-2"></div>
				<div class="col-sm-10">
					{% if presentation.hasThumbs() %}
						<em>{{ 'form.label.current_thumbnail'|trans }} :</em> <img src="{{ asset(presentation.getThumbsPath()) }}" title="Miniature" /> <button class="btn btn-default" id="delete_thumbs" type="button" role="button"><span class="glyphicon glyphicon-remove"></span></button>
					{% endif %}
					<input type="hidden" name="keepThumbs" id="keepThumbs" value="{% if presentation.hasThumbs() %}1{% else %}0{% endif %}" />
				</div>
			</div>
		{% endif %}
	</div>
	
	{% if copy %}
	<div class="text-center">
		<a class="wide-btn btn btn-primary" role="button" type="button" href="{{ path('presentation_show', {'id': presentation.id}) }}"><span class="left glyphicon glyphicon-chevron-left" aria-hidden="true"></span> Revenir à la présentation initiale</a>
	</div>
	{% endif %}
	<hr/>
    <table style="width:{{ cellWidth*matrix.levels|length + 120}}px;" id="matrix" class="table table-bordered">
		<tr class="compact_tr">
			<th width="120px"></th>
			{% for level in matrix.levels %}
			<th width="{{ cellWidth }}px" class="text-center">{{ level.title }}</th>
			{% endfor %}
		</tr>
		{% for pov in matrix.povs %}
		<tr height="{{ cellHeight }}px">
			<th class="text-center">{{ pov.title }}</th>
			{% for level in matrix.levels %}
			<td data-prototype="{{ pov.id ~ "_" ~ level.id }}" class="text-center">
				{% if matrix.sortedResources[pov.id][level.id] is defined %}
					<div class="usedResource" style="background-image:url({{ asset(matrix.sortedResources[pov.id][level.id].resource.getThumbsPath) }});">
						{% if copy %}
						<div class="resThumbnailHover" id="usedRes_{{ matrix.sortedResources[pov.id][level.id].id }}" data-id="{{ matrix.sortedResources[pov.id][level.id].id }}" data-toggle="popover" data-trigger="hover" data-duration="{{ matrix.sortedResources[pov.id][level.id].resource.duration|default(11) }}" title="{{ matrix.sortedResources[pov.id][level.id].resource.title }}" data-title="{{ matrix.sortedResources[pov.id][level.id].resource.title | shortenText(80, "...")}}" data-content="{{ matrix.sortedResources[pov.id][level.id].resource.description | shortenText(140, "...")}}" data-resurl="{{ matrix.sortedResources[pov.id][level.id].resource.path }}">
							<span class="resTitle">{{ matrix.sortedResources[pov.id][level.id].resource.title[:30] }}</span>
							<span class="resCheckBox">
								{% if presentation.isChecked(matrix.sortedResources[pov.id][level.id].id) %}
									<span class="glyphicon glyphicon-ok teacherRes" aria-hidden="true"></span>
								{% elseif presentation.isSuggested(matrix.sortedResources[pov.id][level.id].id) %}
									<span class="glyphicon glyphicon-ok suggestedRes" aria-hidden="true"></span>
								{% else %}
									<span class="glyphicon glyphicon-ok" aria-hidden="true"></span>
								{% endif %}
								<span class="user-glyphicon glyphicon glyphicon-ok" aria-hidden="true"></span>
							</span>
						</div>
						{% else %}
						<div class="resThumbnailHover
						{% if presentation.isChecked(matrix.sortedResources[pov.id][level.id].id) %} checkedRes
						{% elseif presentation.isSuggested(matrix.sortedResources[pov.id][level.id].id) %} suggestedRes
						{% endif %}" id="usedRes_{{ matrix.sortedResources[pov.id][level.id].id }}" data-id="{{ matrix.sortedResources[pov.id][level.id].id }}" data-toggle="popover" data-trigger="hover" data-duration="{{ matrix.sortedResources[pov.id][level.id].resource.duration|default(11) }}" title="{{ matrix.sortedResources[pov.id][level.id].resource.title | shortenText(80, "...") }}"
						data-title="{{ matrix.sortedResources[pov.id][level.id].resource.title }}" 
						data-content="{{ matrix.sortedResources[pov.id][level.id].resource.description | 
							shortenText(140, "...") }}" 
						data-resurl="{{ matrix.sortedResources[pov.id][level.id].resource.path }}">
							<span class="resTitle">{{ matrix.sortedResources[pov.id][level.id].resource.title[:30] }}</span>
							<span class="resCheckBox">
								<span class="user-glyphicon glyphicon glyphicon-ok" aria-hidden="true"></span>
							</span>
						</div>
						{% endif %}
					</div>
				{% endif %}
			</td>
			{% endfor %}
		</tr>
		{% endfor %}
	</table>
	<div class="presentation-legend text-center">
		<br/>
		<i>
			{% if copy %}
				<span class="teacherRes glyphicon glyphicon-ok" aria-hidden="true"></span> = {{ 'presentation.initial_presentation'|trans }} |
				<span class="suggestedRes glyphicon glyphicon-ok" aria-hidden="true"></span> = {{ 'presentation.suggested_presentation'|trans }} |
				<span class="checkedRes glyphicon glyphicon-ok" aria-hidden="true"></span> = {{ 'presentation.my_selection'|trans }}
			{% else %}
				<span class="checkedRes glyphicon glyphicon-ok" aria-hidden="true"></span> = {{ 'presentation.added_to_playlist'|trans }} |
				<span class="suggestedRes glyphicon glyphicon-ok" aria-hidden="true"></span> = {{ 'presentation.suggested_as_complement'|trans }}
			{% endif %}
		</i>
	</div>
	{% if copy %}
	<div class="text-center">
		<br/>
		<button id="save_new_presentation" class="wide-btn btn btn-info" role="button" type="button"><span class="left glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> {{ 'presentation.save_selection'|trans }}</button>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<button id="submit_new_presentation" class="wide-btn btn btn-success" role="button" type="button"><span class="glyphicon glyphicon-play" aria-hidden="true"></span> {{ 'presentation.play_selection'|trans }}</button>
	</div>
	{% endif %}
	<hr/>
	<div class="row">
		<div class="col-sm-7">
			<h4><span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span> {{ 'browse.preview_current_resource'|trans }}</h4>
			{% include '::players.html.twig' %}
			<br/>
		</div>
		<div class="col-sm-5">
			{% set totalDuration = 0 %}
			{% set totalDurationSuggestion = 0 %}
			<h4><span class="glyphicon glyphicon-th-list" aria-hidden="true"></span> {{ 'show.playlist'|trans }}</h4>
			{% if not copy %}
				<div role="tab-panel">
					<ul class="nav nav-tabs" role="tablist">
						<li role="presentation" class="active" id="playlist-tab-toggle"><a href="#playlist_tab" aria-controls="playlist_tab" role="tab" data-toggle="tab">{{ 'show.playlist'|trans }}</a></li>
						<li role="presentation" id="suggestion-tab-toggle"><a href="#suggestion_tab" aria-controls="suggestion_tab" role="tab" data-toggle="tab">{{ 'presentation.suggestions'|trans }}</a></li>
					</ul>
					<div class="tab-content">
						<div role="tabpanel" class="tab-pane active" id="playlist_tab">
			{% endif %}
							<ul class="list-group" id="file_list">
								{% if copy == false %}
									{% for res in presentation.resources %}
										{% if res.suggested == false %}
											{% set totalDuration = totalDuration + res.duration %}
											<li class="list-group-item playableResource playableRes_{{res.usedResource.id}}" id="addedRes_{{ res.usedResource.id }}" data-duration="{{ res.duration }}" data-type="used" data-id="{{ res.usedResource.id }}">
												<div class="row">
													<div class="col-sm-7"><span class="glyphicon glyphicon-{{ res.usedResource.resource.getGlyphicon }}"></span> {{ res.usedResource.resource.title }}</div>
													<div class="col-sm-3 text-right">
														{% if res.usedResource.resource.type != 'video' and res.usedResource.resource.type != 'audio' %}
															<a class="editTimeButton"><span class="glyphicon glyphicon-edit"></span></a> 
														{% endif %}
														<span class="durationContainer">{{ "%02d"|format(res.duration // 60) }}:{{ "%02d"|format(res.duration % 60) }}</span>
													</div>
													<div class="col-sm-2 text-right"><a class="rmRes" id="rmRes_{{ res.usedResource.id }}" data-type="used" data-id="{{ res.usedResource.id }}"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></a></div>
													<input type="hidden" id="usedResource_{{ res.usedResource.id }}" name="usedResource_{{ res.usedResource.id }}_{{ res.duration }}" value="{{ res.sort }}" />
												</div>
											</li>
										{% endif %}
									{% endfor %}
								{% endif %}
							</ul>
							<p class="text-right">
								{{ 'show.total_duration'|trans }} : <span id="total_duration">{{ "%02d"|format(totalDuration // 60) }}:{{ "%02d"|format(totalDuration % 60) }}</span>
							</p>
							{% if attribute(presentation, presentation.id) is defined %}
								<p class="text-center"><a href="{{ path('annotation_edit', {'id' : presentation.id}) }}"><span class="glyphicon glyphicon-edit"></span> Gérer les annotations</a></p>
							{% endif %}
						{% if not copy %}
						</div>
						<!-- Suggestions -->
						<div role="tabpanel" class="tab-pane" id="suggestion_tab">
							<ul class="list-group" id="suggestion_list">
							{% for res in presentation.resources %}
								{% if res.suggested == true %}
									{% set totalDurationSuggestion = totalDurationSuggestion + res.duration %}
									<li class="list-group-item playableResource suggestedRes_{{res.usedResource.id}}" id="suggestedRes_{{ res.usedResource.id }}" data-duration="{{ res.duration }}"  data-type="suggestion" data-id="{{ res.usedResource.id }}">
										<div class="row">
											<div class="col-sm-7"><span class="glyphicon glyphicon-{{ res.usedResource.resource.getGlyphicon }}"></span> {{ res.usedResource.resource.title }}</div>
											<div class="col-sm-3 text-right">
												{% if res.usedResource.resource.type != 'video' and res.usedResource.resource.type != 'audio' %}
													<a class="editTimeButton"><span class="glyphicon glyphicon-edit"></span></a> 
												{% endif %}
												<span class="durationContainer">{{ "%02d"|format(res.duration // 60) }}:{{ "%02d"|format(res.duration % 60) }}</span>
											</div>
											<div class="col-sm-2 text-right"><a class="rmRes" id="rmRes_{{ res.usedResource.id }}" data-type="suggestion" data-id="{{ res.usedResource.id }}"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></a></div>
											<input type="hidden" id="suggestedResource_{{ res.usedResource.id }}" name="suggestedResource_{{ res.usedResource.id }}_{{ res.duration }}" value="{{ res.sort }}" />
										</div>
									</li>
								{% endif %}
							{% endfor %}
							</ul>
							<p class="text-right">
								{{ 'show.total_duration'|trans }} : <span id="total_duration_suggestion">{{ "%02d"|format(totalDurationSuggestion // 60) }}:{{ "%02d"|format(totalDurationSuggestion % 60) }}</span>
							</p>
						</div>
					</div><!-- .tab-content -->
				</div><!-- role=tab-panel -->
			{% endif %}
		</div>
	</div>
	{{ form_widget(form.save, {'attr': {'style': 'display:none;', 'class': 'btn btn-primary'}}) }}
	{{ form_rest(form) }}
	{# Fermeture de la balise <form> du formulaire HTML #}
	{{ form_end(form) }}
	{# Include more info here - which topic does the matrix belong to? Who was the original creator of the matrix?#}
{% endblock %}

{% block script %}
	{{ parent() }}
	<script>		
		resourcesCollection = {
			{% for usedRes in matrix.resources %}
				{{ usedRes.id }}: {
					'title': "{{ usedRes.resource.title }}", 
					'description': "{{ usedRes.resource.description }}", 
					'creation': "{{ usedRes.resource.dateCreate|date('d/m/y') }}", 
					'update': "{{ usedRes.resource.dateUpdate|date('d/m/y') }}", 
					'duration': {{ usedRes.resource.duration|default(11) }},
					'duration_str': "{{ "%02d"|format((usedRes.resource.duration|default(11)) // 60) }}:{{ "%02d"|format((usedRes.resource.duration|default(11)) % 60) }}",
					'src': "{{ asset(usedRes.resource.getResourcePath) }}",
					'type': "{{ usedRes.resource.type }}",
					'glyphicon': "{{ usedRes.resource.getGlyphicon }}"
				},
			{% endfor %}
		};
		selectedRes = 0;
		$(document.querySelectorAll(".player")[0]).show();
		
		{% include '::plyrSetup.html.twig' %}
		
		function triggerNewRes(resId) {
			if(selectedRes != resId) {
				$('.playableRes_' + selectedRes).removeClass('active');
				selectedRes = resId;
				res = resourcesCollection[resId];
				stopAndHideAll(res['type']);
				$('.playableRes_' + resId).addClass('active');
				
				displayNewRes(res['src'], res['type']);
			}
		}
		
		$('.playableResource').click(function() {
			triggerNewRes($(this).attr('data-id'));
		});
		
		function pad(num, size) {
			var s = num+"";
			while (s.length < size) s = "0" + s;
			return s;
		}

		function convertDurationToString(value) {
			return (pad(~~(value / 60), 2)) + ':' + pad((value % 60), 2);
		}
		
		function addToDuration(value, toSuggestions) {
			// Default value
			toSuggestions = toSuggestions || false;
			
			// conv base10
			var container =  toSuggestions ? "#total_duration_suggestion" : "#total_duration";
			
			var current = $(container).html().split(":");
			total = parseInt(current[0], 10)*60 + parseInt(current[1], 10) + value;
			$(container).html(convertDurationToString(total));
			
			if(!toSuggestions) {
				$('#vmb_presentationbundle_presentation_duration').val(total);
			}
		}
		
		
		function editTime(item) {
			var li = $(item).closest('.playableResource');
			var oldDuration = li.attr('data-duration');
			var newDuration = prompt("Entrez la nouvelle durée pour cet item", oldDuration);

			if (newDuration != null) {
				newDuration = parseInt(newDuration, 10);
				if(newDuration >= 5) {
					oldDuration = parseInt(oldDuration, 10);
					addToDuration(newDuration - oldDuration, li.attr('data-type') != 'used');

					
					li.attr('data-duration', newDuration + '');
					li.find('.durationContainer').html(convertDurationToString(newDuration));
					name = li.find('input').attr('name');
					
					var regex = /^(usedResource|suggestedResource)_([0-9]+)_([0-9]+)$/;
					li.find('input').attr('name', name.replace(regex, '$1_$2_' + newDuration));
				}
				else {
					alert('Erreur : le temps doit être supérieur à 5 secondes');
				}
			}
		}
		
		function sortAllItems(selector) {
			$( selector ).each(function( index ) {
				input = $(this).find('input');
				if(input.attr('name') !== undefined) {
					input.val(index);
				}
			});
		}
		
		function deleteFromPlaylist(resId, type, duration) {
			if(type == 'used') {
				$('#addedRes_' + resId).remove();
				$('#usedRes_' + resId).removeClass('checkedRes');
				sortAllItems('#file_list li');
				
				if(duration == null)  {
					addToDuration(-parseInt($('#usedRes_' + resId).attr('data-duration'), 10));
				}
				else {
					addToDuration(-parseInt(duration, 10));
				}
			}
			else {
				$('#suggestedRes_' + resId).remove();
				$('#usedRes_' + resId).removeClass('suggestedRes');
				sortAllItems('#suggestion_list li');
				
				if(duration == null)  {
					addToDuration(-parseInt($('#suggestedRes_' + resId).attr('data-duration'), 10), true);
				}
				else {
					addToDuration(-parseInt(duration, 10), true);
				}
			}
		}
		
		function addToPlaylist(resId, title, type, duration) {
			if(type == 'used') {
				$('#usedRes_' + resId).addClass('checkedRes');
				$('#file_list').append(generateNewItem(resId, title, 'used', duration));
				$('#rmRes_' + resId).click(function(event) 	 { event.stopImmediatePropagation(); deleteFromPlaylist($(this).attr('data-id'), 'used', $(this).closest('.playableResource').attr('data-duration')); });
				
				if(duration == null)  {
					addToDuration(parseInt($('#usedRes_' + resId).attr('data-duration'), 10));
				}
				else {
					addToDuration(parseInt(duration, 10));
				}
			}
			else {
				$('#usedRes_' + resId).addClass('suggestedRes');
				$('#suggestion_list').append(generateNewItem(resId, title, 'suggestion', duration));
				$('#rmRes_' + resId).click(function(event) 	 { event.stopImmediatePropagation(); deleteFromPlaylist($(this).attr('data-id'), 'suggestion', $(this).closest('.playableResource').attr('data-duration')); });
				
				if(duration == null)  {
					addToDuration(parseInt($('#suggestedRes_' + resId).attr('data-duration'), 10), true);
				}
				else {
					addToDuration(parseInt(duration, 10), true);
				}
			}
			$('.playableRes_' + resId).click(function() { triggerNewRes($(this).attr('data-id'));});
			$('.playableRes_' + resId).find('.editTimeButton').click(function(event) { event.stopImmediatePropagation(); event.preventDefault(); editTime(this); });
		}
		
		function generateNewItem(id, title, type, duration) {
			var resourceData = resourcesCollection[id];
			if(duration == null)  {
				duration = resourceData['duration'];
			}
			 
			var editTime = '';
			if(resourceData['type'] != 'video' && resourceData['type'] != 'audio') {
				editTime = '<a class="editTimeButton"><span class="glyphicon glyphicon-edit"></span></a> ';
			}
			
			if(type=='used') {
				return '<li class="list-group-item playableResource playableRes_' + id + '" id="addedRes_' + id + '" data-duration="' + duration + '" data-type="used" data-id="' + id + '"><div class="row"> \
					<div class="col-sm-7"><span class="glyphicon glyphicon-' + resourceData['glyphicon'] + '"></span> ' + title + '</div> \
					<div class="col-sm-3 text-right">' + editTime + '<span class="durationContainer">' + convertDurationToString(duration) + '</span></div> \
					<div class="col-sm-2 text-right"><a id="rmRes_' + id + '" data-type="used" data-id="' + id + '"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></a></div> \
					<input type="hidden" id="usedResource_' + id + '" name="usedResource_' + id + '_' + duration + '" value="' + $('#file_list li').length + '" />\
					</div></li>';
			}
			else {
				return '<li class="list-group-item playableResource playableRes_' + id + '" id="suggestedRes_' + id + '" data-duration="' + duration + '" data-type="suggestion" data-id="' + id + '"><div class="row"> \
					<div class="col-sm-7"><span class="glyphicon glyphicon-' + resourceData['glyphicon'] + '"></span> ' + title + '</div> \
					<div class="col-sm-3 text-right">' + editTime + '<span class="durationContainer">' + convertDurationToString(duration) + '</span></div> \
					<div class="col-sm-2 text-right"><a id="rmRes_' + id + '" data-type="suggestion" data-id="' + id + '"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></a></div> \
					<input type="hidden" id="suggestedResource_' + id + '" name="suggestedResource_' + id + '_' + duration + '" value="' + $('#suggestion_list li').length + '" />\
					</div></li>'
			}
		}
		
		
		$(function () {
			$('#file_list li').draggable({
				zIndex: 100000,
				revert: true,
				revertDuration: 0,
				connectToSortable: "#file_list"
			});

			$("#playlist-tab-toggle").droppable({
				accept: '#suggestion_list li',
				tolerance: 'touch',
				over: function (event, ui) {
					//workaround for bug http://bugs.jqueryui.com/ticket/6259
					ui.helper.removeData('overSortable');
				}, 
				drop: function (event, ui) {
					//workaround for bug http://bugs.jqueryui.com/ticket/6259
					if (ui.helper.data('overSortable') != null) {
						ui.helper.removeData('overSortable'); return;
					}
					addToPlaylist(ui.draggable.attr('data-id'), resourcesCollection[ui.draggable.attr('data-id')]['title'], 'used', ui.draggable.attr('data-duration'))
					deleteFromPlaylist(ui.draggable.attr('data-id'), 'suggestion', ui.draggable.attr('data-duration'));
					ui.draggable.remove();
				}
			});
			
			$("#suggestion-tab-toggle").droppable({
				accept: '#file_list li',
				tolerance: 'touch',
				over: function (event, ui) {
					//workaround for bug http://bugs.jqueryui.com/ticket/6259
					ui.helper.removeData('overSortable');
				}, 
				drop: function (event, ui) {
					//workaround for bug http://bugs.jqueryui.com/ticket/6259
					if (ui.helper.data('overSortable') != null) {
						ui.helper.removeData('overSortable'); return;
					}
					addToPlaylist(ui.draggable.attr('data-id'), resourcesCollection[ui.draggable.attr('data-id')]['title'], 'suggestion', ui.draggable.attr('data-duration'))
					deleteFromPlaylist(ui.draggable.attr('data-id'), 'used', ui.draggable.attr('data-duration'));
					ui.draggable.remove();
				}
			});
			
			$('[data-toggle="popover"]').popover({
				container:'body'
			});
			$('#file_list').sortable({
				out: function (event, ui) {
					//workaround for bug http://bugs.jqueryui.com/ticket/6259
					ui.helper.data('overSortable', true);
				}
			}).droppable({
				accept: '#none'
			});
			$( "#file_list" ).on( "sortupdate", function( event, ui ) { 
				sortAllItems('#file_list li');
			} );
			
			$( "#file_list" ).on( "sortupdate", function( event, ui ) { 
				var input = ui.item.find('input');
				//input.attr('name', input.attr('id'));
				
				
				$( "#file_list li" ).each(function( index ) {
					input = $(this).find('input');
					if(input.attr('name') !== undefined) {
						input.val(index);
					}
				});
			} );
			
			$('#suggestion_list').sortable().droppable({
				accept: '#none'
			});
			$( "#suggestion_list" ).on( "sortupdate", function( event, ui ) { 
				sortAllItems('#suggestion_list li');
			} );
			
			$( "#suggestion_list" ).on( "sortupdate", function( event, ui ) { 
				var input = ui.item.find('input');
				//input.attr('name', input.attr('id'));
				
				
				$( "#suggestion_list li" ).each(function( index ) {
					input = $(this).find('input');
					if(input.attr('name') !== undefined) {
						input.val(index);
					}
				});
			} );
			
			$('.rmRes').click(function() {
				deleteFromPlaylist($(this).attr('data-id'), $(this).attr('data-type'), $(this).closest('.playableResource').attr('data-duration'));
			});
			
			$('.resThumbnailHover').click(function(){
				var duration = parseInt($('#usedRes_' + $(this).attr('data-id')).attr('data-duration'), 10);
				
				if($(this).hasClass('checkedRes')) {
					deleteFromPlaylist($(this).attr('data-id'), 'used');
					
					{% if copy == false %}
					addToPlaylist($(this).attr('data-id'), $(this).attr('data-title'), 'suggestion');
					{% endif %}
				}
				else if($(this).hasClass('suggestedRes')) {
					deleteFromPlaylist($(this).attr('data-id'), 'suggestion');
				}
				else {
					addToPlaylist($(this).attr('data-id'), $(this).attr('data-title'), 'used');
				}
			});
		})
		
		$('.editTimeButton').click(function(event) { 
			event.stopImmediatePropagation(); 
			event.preventDefault(); 
			editTime(this); 
		});
		
		/** TODO: 
		 * - Submit on condition that form data has changed since page load
		 * - Validate form
		 */
		$('#save-btn').click(function() {
			if($('#file_list li').length > 0) {
				$('#presentation_form').submit();
			} else {
				alert('Aucun élément dans la liste de lecture');
			}
		});

		$('#delete_thumbs').click(function(event) {
			event.preventDefault();
			$('#keepThumbs').val(0);
			$('#presentation_form').submit();
		});
		
		
		{% if copy %}
		$('#save_new_presentation').click(function(event) {
			event.preventDefault();
			if($('#file_list li').length > 0) {
				$('#presentation_form').submit();
			}
			else {
				alert('Aucun élément dans la liste de lecture');
			}
		});
		$('#submit_new_presentation').click(function(event) {
			event.preventDefault();
			if($('#file_list li').length > 0) {
				$('#presentation_form').attr("action", "{{ path("presentation_show", {'id': presentation.id}) }}");
				$('#presentation_form').submit();
			}
			else {
				alert('Aucun élément dans la liste de lecture');
			}
		});
		{% endif %}
	</script>
{% endblock %}
