{% extends '::Backend/subPage.html.twig' %}

{% set firstResource = null %}
{% if alternativeResources|length == 0 %}
	{% if entity.resources|length != 0 %}
		{% set firstResource = entity.resources[0].usedResource %}
	{% endif %}
{% else %}
	{% set firstResource = alternativeResources[0] %}
{% endif %}

{% block body %}
    <div class="row">
		<div class="col-sm-9">
			{% if firstResource != null %}
			<div {% if firstResource.resource.type != 'video' %}style="display: none;"{% endif %} class="player">
				<video id="video_player" controls crossorigin>
					<!-- Video files -->
					{% if firstResource.resource.type == 'video' %}
					<source src="{{ asset(firstResource.resource.getResourcePath) }}">
					{% endif %}
				</video>
			</div>
			<div {% if firstResource.resource.type != 'audio' %}style="display: none;"{% endif %} class="player">
				<audio id="audio_player" controls>
					<!-- Audio files -->
					{% if firstResource.resource.type == 'audio' %}
					<source src="{{ asset(firstResource.resource.getResourcePath) }}">
					{% endif %}
				</audio>
			</div>
			<div class="image_player">
				
			</div>
			<div class="file_player">
				
			</div>
			{% endif %}
		</div>
		<div class="col-sm-3">
			<h4><span class="glyphicon glyphicon-th-list" aria-hidden="true"></span> Liste de lecture</h4>
			{% set totalDuration = 0 %}
			<ul class="list-group" id="file_list">
				{% set firstLoop = true %}
				{% if alternativeResources|length == 0 %}
					{% for res in entity.resources %}
						{% if res.suggested == false %}
							{% set totalDuration = totalDuration + res.usedResource.resource.duration %}
							<li class="list-group-item{% if firstLoop %} active{% set firstLoop = false %}{% endif %}" id="addedRes_{{ res.usedResource.id }}" data-id="{{ res.usedResource.id }}">
								<div class="row">
									<div class="col-sm-8"><span class="glyphicon glyphicon-{{ res.usedResource.resource.getGlyphicon }}" aria-hidden="true"></span> {{ res.usedResource.resource.title[:20] }}</div>
									<div class="col-sm-4">{{ "%02d"|format(res.usedResource.resource.duration // 60) }}:{{ "%02d"|format(res.usedResource.resource.duration % 60) }}</div>
								</div>
							</li>
						{% endif %}
					{% endfor %}
				{% else %}
					{% for usedRes in alternativeResources %}
						{% set totalDuration = totalDuration + usedRes.resource.duration %}
						<li class="list-group-item{% if firstLoop %} active{% set firstLoop = false %}{% endif %}" id="addedRes_{{ usedRes.id }}" data-id="{{ usedRes.id }}">
							<div class="row">
								<div class="col-sm-8"><span class="glyphicon glyphicon-{{usedRes.resource.getGlyphicon }}" aria-hidden="true"></span> {{ usedRes.resource.title[:20] }}</div>
								<div class="col-sm-4">{{ "%02d"|format(usedRes.resource.duration // 60) }}:{{ "%02d"|format(usedRes.resource.duration % 60) }}</div>
							</div>
						</li>
					{% endfor %}
				{% endif %}
			</ul>
			<p class="text-center">
				Durée totale : <span id="total_duration">{{ "%02d"|format(totalDuration // 60) }}:{{ "%02d"|format(totalDuration % 60) }}</span>
			</p>
			<div class="text-center"><a href="{{ path('presentation_complementary', {'id': entity.id}) }}" type="button" class="btn btn-primary">Voir plus <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span></a></div>
		</div>
    </div>
    <hr/>
    {% if firstResource != null %}
    <h3>Détails de la ressource actuelle</h3>
    <table class="table">
		<tbody>
			<tr>
				<th width="120px">Titre</th>
				<td id="current-res-title">{{ firstResource.resource.title }}</td>
			</tr>
			<tr>
				<th width="120px">Position</th>
				<td id="current-res-position">{{ firstResource.pov.title }} - {{ firstResource.level.title }}</td>
			</tr>
			<tr>
				<th width="120px">Description</th>
				<td id="current-res-description">{{ firstResource.resource.description }}</td>
			</tr>
			<tr>
				<th>Création</th>
				<td id="current-res-creation">{{ firstResource.resource.dateCreate|date('d/m/y') }}</td>
			</tr>
			<tr>
				<th>Mise à jour</th>
				<td id="current-res-update">{{ firstResource.resource.dateUpdate|date('d/m/y') }}</td>
			</tr>
		</tbody>
	</table>
	{% endif %}
{% endblock %}


{% block script %}
	{{ parent() }}
	<script>
	
	resourcesCollection = {
		{% if alternativeResources|length == 0 %}
			{% for res in entity.resources %}
				{% if res.suggested == false %}
					{{ res.usedResource.id }}: {
						'pov': "{{ res.usedResource.pov.title }}", 
						'level': "{{ res.usedResource.level.title }}", 
						'title': "{{ res.usedResource.resource.title }}", 
						'description': "{{ res.usedResource.resource.description }}", 
						'creation': "{{ res.usedResource.resource.dateCreate|date('d/m/y') }}", 
						'update': "{{ res.usedResource.resource.dateUpdate|date('d/m/y') }}", 
						'duration': {{ res.usedResource.resource.duration|default(0) }},
						'duration_str': "{{ "%02d"|format(res.usedResource.resource.duration // 60) }}:{{ "%02d"|format(res.usedResource.resource.duration % 60) }}",
						'src': "{{ asset(res.usedResource.resource.getResourcePath) }}",
						'type': "{{ res.usedResource.resource.type }}"
					},
				{% endif %}
			{% endfor %}
		{% else %}
			{% for usedRes in alternativeResources %}
				{{ usedRes.id }}: {
					'pov': "{{ usedRes.pov.title }}", 
					'level': "{{ usedRes.level.title }}", 
					'title': "{{ usedRes.resource.title }}", 
					'description': "{{ usedRes.resource.description }}", 
					'creation': "{{ usedRes.resource.dateCreate|date('d/m/y') }}", 
					'update': "{{ usedRes.resource.dateUpdate|date('d/m/y') }}", 
					'duration': {{ usedRes.resource.duration|default(0) }},
					'duration_str': "{{ "%02d"|format(usedRes.resource.duration // 60) }}:{{ "%02d"|format(usedRes.resource.duration % 60) }}",
					'src': "{{ asset(usedRes.resource.getResourcePath) }}",
					'type': "{{ usedRes.resource.type }}"
				},
			{% endfor %}
		{% endif %}	
	};
	
	resourcesOrder = [ {% if alternativeResources|length == 0 %}
			{% for res in entity.resources %}
				{% if res.suggested == false %}
					{{ res.usedResource.id }},
				{% endif %}
			{% endfor %}
		{% else %}
			{% for usedRes in alternativeResources %}
				{{ usedRes.id }},
			{% endfor %}
		{% endif %} ];
		
	selectedRes = {{ firstResource.id|default(0) }};
	
	// Setup the player
	plyr.setup({
		debug: 	true,
		title: 	"Video demo",
		captions: {
			defaultActive: true
		},
		onSetup: function() {
			var player 	= this,
				type 	= player.media.tagName.toLowerCase(),
				toggle 	= document.querySelector("[data-toggle='fullscreen']");

			console.log("✓ Setup done for <" + type + ">");

			if(type === "video" && toggle) {
				toggle.addEventListener("click", player.toggleFullscreen, false);
			}
		}
	});
	
	function stopAndHideAll(newType) {
		if(newType != 'video') {
			videoPlayer = document.querySelectorAll(".player")[0].plyr;
			videoPlayer.pause();
			$(document.querySelectorAll(".player")[0]).hide();
		}
		if(newType != 'audio') {
			audioPlayer = document.querySelectorAll(".player")[1].plyr;		
			audioPlayer.pause();
			$(document.querySelectorAll(".player")[1]).hide();
		}
	}
	
	function triggerNewRes(resId) {
		if(selectedRes != resId) {
			$('#addedRes_' + selectedRes).removeClass('active');
			selectedRes = resId;
			res = resourcesCollection[resId];
			stopAndHideAll(res['type']);
			$('#addedRes_' + resId).addClass('active');
			$('#current-res-title').html(res['title']);
			$('#current-res-position').html(res['pov'] + ' - ' + res['level']);
			$('#current-res-creation').html(res['creation']);
			$('#current-res-update').html(res['update']);
			$('#current-res-description').html(res['description']);
			
			if(res['type'] == 'audio') {
				$(document.querySelectorAll(".player")[1]).show();
				player = document.querySelectorAll(".player")[1].plyr;
				player.source(res['src']);
				player.play();
			}
			else if(res['type'] == 'video') {
				$(document.querySelectorAll(".player")[0]).show();
				player = document.querySelectorAll(".player")[0].plyr;
				player.source(res['src']);
				player.play();
			}
		}
	}
	
	function indexOf(array, item) {
		for (var i = 0; i < array.length; i++) {
			if (array[i].toString() === item.toString()) return i;
		}
		return -1;
	}
	
	function nextResource() {
		i = indexOf(resourcesOrder, selectedRes);
		i++;
		if(i < resourcesOrder.length) {
			triggerNewRes(resourcesOrder[i]);
		}
	}
	
	$('#file_list .list-group-item').click(function() {
		triggerNewRes($(this).attr('data-id'));
	});
	
	var video = $('video')[0];
	//$('.player').css('display', 'none');
    video.onended = function(e) {
		nextResource();
    };
    
    var audio = $('audio')[0];
	//$('.player').css('display', 'none');
    audio.onended = function(e) {
		nextResource();
    };
	</script>
{% endblock %}
