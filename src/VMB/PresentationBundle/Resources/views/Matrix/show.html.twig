{% set editModal = '.bs-example-modal-lg' %}
{% set saveButton = 'true' %}
{% extends '::Backend/subPage.html.twig' %}

{% set lvlLength = entity.levels|length %}
{% if lvlLength == 0 %}
	{% set lvlLength = 1 %}
{% endif %}	

{% set cellWidth = (830 / lvlLength) %}
	{% if cellWidth > 120 %}
		{% set cellWidth = 120 %}
	{% endif %}
	{% set cellHeight = cellWidth * 9 / 16 %}

{% block body %}
	<div class="drag_container">
		<form id="matrix_form" action="{{ path('matrix_update', {'id': entity.id})}}" method="post">
		<table style="width:{{ cellWidth*entity.levels|length + 120}}px;" id="matrix" class="table table-bordered">
			<tr class="compact_tr">
				<th width="120px"></th>
				{% for level in entity.levels %}
				<th width="{{ cellWidth }}px" class="text-center">{{ level.title }}</th>
				{% endfor %}
			</tr>
			{% for pov in entity.povs %}
			<tr height="{{ cellHeight }}px">
				<th class="text-center">{{ pov.title }}</th>
				{% for level in entity.levels %}
				<td data-prototype="{{ pov.id ~ "_" ~ level.id }}" class="text-center">
					<input type="hidden" name="{{ pov.id ~ "_" ~ level.id }}" value="{{ entity.sortedResources[pov.id][level.id].resource.id|default(0) }}" />
					{% if entity.sortedResources[pov.id][level.id] is defined %}
						<div class="usedResource" data-resource="{{ entity.sortedResources[pov.id][level.id].resource.id }}" style="background-image:url({{ asset(entity.sortedResources[pov.id][level.id].resource.getThumbsPath) }});">
							<div class="resThumbnailHover"><span class="resTitle">{{ entity.sortedResources[pov.id][level.id].resource.title|shortenText(18, '...') }}</span></div>
						</div>
					{% endif %}
				</td>
				{% endfor %}
			</tr>
			{% endfor %}
		</table>
	</form>
	<hr/>
		<div class="row">
			<div class="col-sm-7">
				<h4><span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span> {{ 'browse.preview_current_resource'|trans }}</h4>
				{% include '::players.html.twig' %}
			</div>
			<div class="col-sm-5">
				<h4><span class="glyphicon glyphicon-open" aria-hidden="true"></span>  {{ 'resource.browse'|trans }}{% if entity.official %} {{ 'resource.officials'|trans }}{% endif %}</h4>
				<div id="browse_file" role="tab-panel">
					<ul class="nav nav-tabs" role="tablist">
						<li role="presentation" class="active"><a href="#personal" aria-controls="personal" role="tab" data-toggle="tab">{{ 'resource.personals'|trans }}</a></li>
						<li role="presentation"><a href="#official" aria-controls="official" role="tab" data-toggle="tab">{{ 'resource.officials'|trans }}</a></li>
						<li role="presentation"><a href="#bookmarks" aria-controls="bookmarks" role="tab" data-toggle="tab">{{ 'resource.bookmarks'|trans }}</a></li>
						{% if not entity.official %}<li role="presentation"><a href="#unofficial" aria-controls="unoffficial" role="tab" data-toggle="tab">{{ 'resource.shared'|trans }}</a></li>{% endif %}
						<li role="presentation"><a href="{{ path('resource_new') }}"><span class="glyphicon glyphicon-plus"></span></a></li>
					</ul>
					<div class="tab-content">
						{% for key, subArrResources in resources %}
						<div role="tabpanel" class="tab-pane{% if key == 'personal' %} active{% endif %}" id="{{ key }}">
							<div class="panel-group" role="tablist">
								<div class="panel panel-default">
									{% if subArrResources|length == 0 %}
										<div style="" aria-expanded="true" class="panel-collapse">
											<ul class="list-group">
												<li class="list-group-item">
													<em>{{ 'resource.none_found_in_this_space'|trans }}
													{% if entity.official %}<br/>{{ 'matrix.note_resource'|trans }}{% endif %}</em>
												</li>
											</ul>
										</div>
									{% else %}
										{% set lastType = '' %}
										{% for elt in subArrResources %}
											{% if lastType != elt.type %}
												{% if lastType != '' %}
														</ul>
													</div>
												{% endif %}
												{% set lastType = elt.type %}
												<div class="panel-heading" role="tab" id="collapseListGroupHeading_{{ key }}_{{ elt.type }}">
													<h4 id="-collapsible-list-group-{{ key }}-{{ elt.type }}" class="panel-title">
													<a class="panel-title-link" data-toggle="collapse" href="#collapseListGroup_{{ key }}_{{ elt.type }}" aria-expanded="true" aria-controls="collapseListGroup_{{ key }}_{{ elt.type }}">
														<span class="glyphicon glyphicon-{{ elt.getGlyphicon }}"></span> {{ elt.getTypeTitle }}
													</a>
													<a class="anchorjs-link" href="#-collapsible-list-group-{{ key }}-{{ elt.type }}"><span class="anchorjs-icon"></span></a></h4>
												</div>
												<div style="" aria-expanded="false" id="collapseListGroup_{{ key }}_{{ elt.type }}" class="panel-collapse collapse" role="tabpanel" aria-labelledby="collapseListGroupHeading_{{ key }}_{{ elt.type }}">
													<ul class="list-group">
											{% endif %}
														<li class="list-group-item addableResource addableRes_{{elt.id}}" data-resource="{{ elt.id }}" data-title="{{ elt.title|shortenText(18, '...') }}" data-thumb="{{ asset(elt.getThumbsPath) }}">
															<div class="row">
																<div class="col-sm-10">{{ elt.title }}</div>
																<div class="col-sm-2">{% if elt.duration > 0 %}{{ elt.durationToString }}{% endif %}</div>
															</div>
														</li>
										{% endfor %}
													</ul>
												</div>
									{% endif %}												
								</div><!-- panel panel-default -->
							</div><!-- panel-group -->
						</div><!-- tab-pane -->
						{% endfor %}
					</div><!-- tab-content -->
				</div>
			</div>
		</div>
	</div>

	<div class="row">
		<div class="col-md-8">
			<h4 class="view-more-title"><a data-toggle="collapse" href="#collapseDescription" aria-expanded="false" aria-controls="collapseDescription">DÃ©tails de la matrice <span class="glyphicon glyphicon-chevron-right"></span></a></h4>
			<div class="collapse" id="collapseDescription">
			<strong>{{ 'table.creation'|trans }} {{ entity.dateCreation|date('d/m/y') }}</strong>
			{% if entity.dateCreation != entity.dateUpdate %}  ({{ 'table.update'|trans }}:{{ entity.dateUpdate|date('d/m/y') }}){% endif %}
			<p>{{ entity.description }} </p>
			</div>
		</div>
	</div>

	<div id="indicator" class="loading_indicator"></div>

	<!-- Modal -->
	<div class="modal fade" id="modalEditRows" tabindex="-1" role="dialog" aria-labelledby="modalEditRowsLabel" aria-hidden="true">
	  <div class="modal-dialog">
		<div class="modal-content">
		  <div class="modal-header">
			<button type="button" class="close" data-dismiss="modal" aria-label="{{ 'Close'|trans }}"><span aria-hidden="true">&times;</span></button>
			<h4 class="modal-title" id="modalEditRowsLabel">{{ 'matrix.modify_structure'|trans }}</h4>
		  </div>
			<div class="modal-body">
				<div class="row">
					<div class="col-md-6">
						<h4 class="text-center">{{ 'matrix.povs'|trans }} <button class="btn btn-default" role="button" type="button" id="addPov"><span class="glyphicon glyphicon-plus"></span></button></h4>
						<ul class="list-group Pov-list">
							{% for pov in entity.povs %}
								<li class="list-group-item row" data-type="Pov" data-id="{{ pov.id }}">
									<div class="col-md-10 matrix-row-title">{{ pov.title }}</div>
									<div class="col-md-2 text-right"><a class="rm-btn" type="button"><span class="glyphicon glyphicon-remove"></span></a></div>
								</li>
							{% endfor %}
						</ul>
					</div>
					<div class="col-md-6">
						<h4 class="text-center">{{ 'matrix.levels'|trans }} <button class="btn btn-default" role="button" type="button" id="addLevel"><span class="glyphicon glyphicon-plus"></span></button></h4>
						<ul class="list-group Level-list">
							{% for lvl in entity.levels %}
								<li class="list-group-item row" data-type="Level" data-id="{{ lvl.id }}">
									<div class="col-md-10 matrix-row-title">{{ lvl.title }}</div>
									<div class="col-md-2 text-right"><a class="rm-btn" type="button"><span class="glyphicon glyphicon-remove"></span></a></div>
								</li>
							{% endfor %}
						</ul>
					</div>
				</div>
			</div>
		  <div class="modal-footer">
			<button type="button" class="btn btn-default" data-dismiss="modal">{{ 'Fermer'|trans }} <span class="glyphicon glyphicon-remove"></span></button>
		  </div>
		</div>
	  </div>
	</div>

	<div id="myModal" class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
	  <div class="modal-dialog modal-lg">
		<div class="modal-content container">
		</div>
	  </div>
	</div>
{% endblock %}

{% block script %}
	{{ parent() }}
	<script>
	rowsUpdated = false;
	
	resourcesCollection = {
		{% for key, subArrResources in resources %}
			{% for elt in subArrResources %}
				{{ elt.id }}: {
					'title': "{{ elt.title }}", 
					'description': "{{ elt.description }}", 
					'creation': "{{ elt.dateCreate|date('d/m/y') }}", 
					'update': "{{ elt.dateUpdate|date('d/m/y') }}", 
					'duration': {{ elt.duration|default(0) }},
					'duration_str': "{{ "%02d"|format(elt.duration // 60) }}:{{ "%02d"|format(elt.duration % 60) }}",
					'src': "{{ asset(elt.getResourcePath) }}",
					'type': "{{ elt.type }}"
				},
			{% endfor %}
		{% endfor %}
	};
	selectedRes = 0;
	$(document.querySelectorAll(".player")[0]).show();
	
	{% include '::plyrSetup.html.twig' %}
		
	var selectedClass = 'ui-state-highlight',
		clickDelay = 250,
		// click time (milliseconds)
		lastClick, diffClick; // timestamps
		
	function triggerNewRes(resId) {
		if(selectedRes != resId) {
			$('.addableRes_' + selectedRes).removeClass('active');
			selectedRes = resId;
			res = resourcesCollection[resId];
			stopAndHideAll(res['type']);
			$('.addableRes_' + resId).addClass('active');
			
			displayNewRes(res['src'], res['type']);
		}
	}
	
	$('.addableResource').click(function() {
		triggerNewRes($(this).attr('data-resource'));
	});
	
	function bindCustomDraggable(selector) {		
		$(selector).bind('mousedown mouseup', function(e) {
			if (e.type == "mousedown") {
				lastClick = e.timeStamp; // get mousedown time
			} else {
				diffClick = e.timeStamp - lastClick;
				if (diffClick < clickDelay) {
					// add selected class to group draggable objects
					$(this).toggleClass(selectedClass);
				}
			}
		})
		.draggable({
			revertDuration: 10,
			containment: '.drag_container',
			zIndex: 1000,
			cursor: "move", 
			cursorAt: { top: {{ cellHeight / 2 }}, left: {{ cellWidth / 2 }} },
			start: function(e, ui) {
				ui.helper.addClass(selectedClass);
			},
			stop: function(e, ui) {
				// reset group positions
				$('.' + selectedClass).css({
					top: 0,
					left: 0
				});
			},
			drag: function(e, ui) {
				// set selected group position to main dragged object
				// this works because the position is relative to the starting position
				$('.' + selectedClass).css({
					top: ui.position.top,
					left: ui.position.left
				});
			}
		});
	}
	
	function noticeUnsavedMatrix() {		
		$("#save-btn").addClass('btn-info');
		$("#save-btn").removeClass('btn-default');
	}
	
	$(function() {
		bindCustomDraggable($(".usedResource"));
		// Script to deferentiate a click from a mousedown for drag event
		
		
		$('.addableResource').draggable({
			zIndex: 1000,
			cursor: "move",
			revert: true,
			helper: "clone"
		});

		$("#browse_file").droppable({
			accept: '.usedResource',
			drop: function(e, ui) {
				ui.draggable.prev('input').val(0);
				$('.usedResource.' + selectedClass).prev('input').val(0);
				ui.draggable.remove();
				$('.usedResource.' + selectedClass).remove();
				noticeUnsavedMatrix();
			}
		});
		
		$("#matrix td").droppable({
			accept: '.usedResource, .addableResource',
			drop: function(e, ui) {
				if(ui.draggable.hasClass('usedResource')) {
					if($('.usedResource.'+ selectedClass).length > 1) {
						alert('Vous ne pouvez pas dÃ©placer plusieurs Ã©lÃ©ments dans une seule case');
					}
					else {
						ui.draggable.prev('input').val(0);
						$('> .usedResource', this).remove();
						$('> input', this).val(ui.draggable.attr('data-resource'));
						ui.draggable.appendTo($(this)) // ui.draggable is appended by the script, so add it after
						.removeClass(selectedClass).css({
							top: 0,
							left: 0
						});
						noticeUnsavedMatrix();
					}
				}
				else {
					$('> .usedResource', this).remove();
					$('> input', this).val(ui.draggable.attr('data-resource'));
					$(this).append('<div class="usedResource" data-resource="' + ui.draggable.attr('data-resource') + '" style="background-image:url(' + ui.draggable.attr('data-thumb') + ');"><div class="resThumbnailHover"><span class="resTitle">' + ui.draggable.attr('data-title') + '</span></div></div>');
					bindCustomDraggable($('> .usedResource', this));
					noticeUnsavedMatrix();
				}
				$(this).removeClass('tdOvered');
			},
			over: function(e, ui) {
				$(this).addClass('tdOvered');
			},
			out: function(e, ui) {
				$(this).removeClass('tdOvered');
			}
		});
	});
	
	$('#myModal').modal({
        show: false,
        remote: "{{ path('matrix_edit', {'id': entity.id}) }}"
	});
	$('#myModal').on('show.bs.modal', function (e) {
		$('#indicator').show();
	});
	$('#myModal').on('shown.bs.modal', function (e) {
		$('#indicator').hide();
	});
	
	$('#save-btn').click(function(event) {
		if($("#save-btn").hasClass('btn-info')) {
			$(".loading_indicator_inline").css('display', 'inline-block');

			event.preventDefault();
			$('#matrix_form').submit();
		}
	});
	
	$('html').keyup(function(e){
		if(e.key == 'Delete') {
			$('.usedResource.' + selectedClass).prev('input').val(0);
			$('.usedResource.' + selectedClass).remove();
			noticeUnsavedMatrix();
		}
	});
	
	
	// Matrix rows management
	function updateTitle(item, id, type, title) {
		$.ajax({
			type: "POST",
			url: "{{ path('matrix_edit_row') }}",
			data: { rowId: id, matrixId: {{ entity.id }}, title: title, rowType: type },
			cache: false,
			success: function(data){
				if($.isNumeric(data)) {
					$(item).html(title);
					$(item).removeClass('inputMode');
					if(id == "0") {
						$(item).closest('li').attr('data-id', data);
					}
					rowsUpdated = true;
				}
				else {
					alert('Une erreur est survenue');
				}
			}
		});    
		return false;
	}
	
	function deleteRow(item, id, type) {
		if(id == 0) {
			$(item).remove();
		}
		else {
			if(confirm('Etes-vous sÃ»r(e) de vouloir supprimer cette ligne? Cette action est irrÃ©versible et dÃ©truit le contenu associÃ©.')){
				$.ajax({
					type: "POST",
					url: "{{ path('matrix_delete_row') }}",
					data: { rowId: id, matrixId: {{ entity.id }}, rowType: type },
					cache: false,
					success: function(data){
						if(data == 'ok') {
							$(item).remove();
							rowsUpdated = true;
						}
						else {
							alert('Une erreur est survenue');
						}
					}
				});
			}    
		}
		return false;
	}
	
	function addNewElt(type) {
		$('.' + type + '-list').append('<li class="list-group-item row" data-type="' + type + '" data-id="0"> \
									<div class="col-md-10 matrix-row-title inputMode"> \
										<div class="input-group"> \
										  <input type="text" class="form-control" value="Nouvelle ligne" />  \
										  <span class="input-group-btn"> \
											<button class="btn btn-default" type="button"><span class="glyphicon glyphicon-ok"></span></button> \
										  </span> \
										</div> \
									</div> \
									<div class="col-md-2 text-right"><a class="rm-btn" type="button"><span class="glyphicon glyphicon-remove"></span></button></a> \
								</li>');
		newItem = $('.' + type + '-list li').last();
		mapEditAction($(newItem).find('.matrix-row-title'));
		mapUpdateAction($(newItem).find('.matrix-row-title button'));
		mapDeleteAction($(newItem).find('.rm-btn'));
	}
	
	function mapDeleteAction(buttonSelector) {
		$(buttonSelector).click(function(event) {
			deleteRow($(this).closest('li'), $(this).closest('li').attr('data-id'), $(this).closest('li').attr('data-type')); 
		});
	}
	
	function mapUpdateAction(buttonSelector) {
		$(buttonSelector).click(function(event) {
			updateTitle($(this).closest('.matrix-row-title'), $(this).closest('li').attr('data-id'), $(this).closest('li').attr('data-type'), $(this).closest('li').find('input').val()); 
		});
	}
	
	function mapEditAction(selector) {
		$(selector).click(function(event) {
			if(!$(this).hasClass('inputMode')) {
				$(this).addClass('inputMode');
				title = $(this).html();
				$(this).html('<div class="input-group"> \
				  <input type="text" class="form-control" value="' + title + '" />  \
				  <span class="input-group-btn"> \
					<button class="btn btn-default" type="button"><span class="glyphicon glyphicon-ok"></span></button> \
				  </span> \
				</div>');
				mapUpdateAction($(this).find('button'));
			}
		});
	}
	
	mapDeleteAction($('.rm-btn'));
	mapEditAction('.matrix-row-title');
	$('#addPov').click(function(event) { addNewElt('Pov'); });
	$('#addLevel').click(function(event) { addNewElt('Level'); });
	
	$('#modalEditRows').on('hide.bs.modal', function (event) {
		if(rowsUpdated) {
			location.reload();
		}
	});

	$('#collapseDescription').on('show.bs.collapse', function(){
				$('a[href="#collapseDescription"] > span').removeClass('glyphicon-chevron-right').addClass('glyphicon-chevron-down');
			})
							.on('hide.bs.collapse', function(){
				$('a[href="#collapseDescription"] > span').removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-right');
			});
	</script>
{% endblock %}
