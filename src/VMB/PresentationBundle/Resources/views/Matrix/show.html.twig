{% set editModal = '.bs-example-modal-lg' %}
{% set saveButton = 'true' %}
{% extends '::Backend/subPage.html.twig' %}

{% set cellWidth = (830 / entity.levels|length) %}
	{% if cellWidth > 120 %}
		{% set cellWidth = 120 %}
	{% endif %}
	{% set cellHeight = cellWidth * 9 / 16 %}

{% block body %}
	<div class="drag_container">
		<form id="matrix_form" action="{{ path('matrix_update', {'id': entity.id})}}" method="post">
		<table style="width:{{ cellWidth*entity.levels|length + 120}}px;" id="matrix" class="table table-bordered">
			<tr class="compact_tr">
				<th width="120px"></th>
				{% for level in entity.levels %}
				<th width="{{ cellWidth }}px" class="text-center">{{ level.title }}</th>
				{% endfor %}
			</tr>
			{% for pov in entity.povs %}
			<tr height="{{ cellHeight }}px">
				<th class="text-center">{{ pov.title }}</th>
				{% for level in entity.levels %}
				<td data-prototype="{{ pov.id ~ "_" ~ level.id }}" class="text-center">
					<input type="hidden" name="{{ pov.id ~ "_" ~ level.id }}" value="{{ entity.sortedResources[pov.id][level.id].resource.id|default(0) }}" />
					{% if entity.sortedResources[pov.id][level.id] is defined %}
						<div class="usedResource" data-resource="{{ entity.sortedResources[pov.id][level.id].resource.id }}" style="background-image:url(https://i.ytimg.com/vi/63crAqHlIbM/mqdefault.jpg);">
							<div class="resThumbnailHover"><span class="resTitle">{{ entity.sortedResources[pov.id][level.id].resource.title[:10] }}</span></div>
						</div>
					{% endif %}
				</td>
				{% endfor %}
			</tr>
			{% endfor %}
		</table>
		</form>
		<hr/>
		<div class="row">
			<div class="col-sm-7">
				<h4>Aperçu</h4>
			</div>
			<div class="col-sm-5">
				<h4>Ajouter une ressource</h4>
				<ul class="list-group" id="file_list">
					{% for elt in resources %}
						<li class="list-group-item addableResource" data-resource="{{ elt.id }}" data-title="{{ elt.title }}" data-thumb="https://i.ytimg.com/vi/Ks_5q9lvcyA/mqdefault.jpg">
							<div class="row">
								<div class="col-sm-10">{{ elt.title }}</div>
								<div class="col-sm-2">{{ "%02d"|format(elt.duration // 60) }}:{{ "%02d"|format(elt.duration % 60) }}</div>
							</div>
						</li>
					{% endfor %}
				</ul>
			</div>
		</div>
	</div>
	<table class="table">
		<tbody>
			<tr>
				<th>Description</th>
				<td>{{ entity.description[:300] }} <span data-prototype="{{entity.description[300:]}}" class="showAll collapsed">...</span></td>
			</tr>
			<tr>
				<th>Création</th>
				<td>{{ entity.dateCreation|date('d/m/y') }}</td>
			</tr>
			<tr>
				<th>Mise à jour</th>
				<td>{{ entity.dateUpdate|date('d/m/y') }}</td>
			</tr>
		</tbody>
	</table>

	<div id="indicator" class="loading_indicator"></div>

	<div id="myModal" class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
	  <div class="modal-dialog modal-lg">
		<div class="modal-content container">
		</div>
	  </div>
	</div>
{% endblock %}

{% block script %}
	{{ parent() }}
	<script>
	var selectedClass = 'ui-state-highlight',
		clickDelay = 250,
		// click time (milliseconds)
		lastClick, diffClick; // timestamps
	
	function bindCustomDraggable(selector) {		
		$(selector).bind('mousedown mouseup', function(e) {
			if (e.type == "mousedown") {
				lastClick = e.timeStamp; // get mousedown time
			} else {
				diffClick = e.timeStamp - lastClick;
				if (diffClick < clickDelay) {
					// add selected class to group draggable objects
					$(this).toggleClass(selectedClass);
				}
			}
		})
		.draggable({
			revertDuration: 10,
			containment: '.drag_container',
			zIndex: 1000,
			cursor: "move", 
			cursorAt: { top: {{ cellHeight / 2 }}, left: {{ cellWidth / 2 }} },
			start: function(e, ui) {
				ui.helper.addClass(selectedClass);
			},
			stop: function(e, ui) {
				// reset group positions
				$('.' + selectedClass).css({
					top: 0,
					left: 0
				});
			},
			drag: function(e, ui) {
				// set selected group position to main dragged object
				// this works because the position is relative to the starting position
				$('.' + selectedClass).css({
					top: ui.position.top,
					left: ui.position.left
				});
			}
		});
	}
	
	function noticeUnsavedMatrix() {		
		$("#save-btn").addClass('btn-info');
		$("#save-btn").removeClass('btn-default');
	}
	
	$(function() {
		bindCustomDraggable($(".usedResource"));
		// Script to deferentiate a click from a mousedown for drag event
		
		
		$('.addableResource').draggable({
			containment: '.drag_container',
			zIndex: 1000,
			cursor: "move",
			revert: true,
			helper: "clone"
		});

		$("#file_list").droppable({
			accept: '.usedResource',
			drop: function(e, ui) {
				ui.draggable.prev('input').val(0);
				$('.usedResource.' + selectedClass).prev('input').val(0);
				ui.draggable.remove();
				$('.usedResource.' + selectedClass).remove();
				noticeUnsavedMatrix();
			}
		});
		
		$("#matrix td").droppable({
			accept: '.usedResource, .addableResource',
			drop: function(e, ui) {
				if(ui.draggable.hasClass('usedResource')) {
					if($('.usedResource.'+ selectedClass).length > 1) {
						alert('Vous ne pouvez pas déplacer plusieurs éléments dans une seule case');
					}
					else {
						ui.draggable.prev('input').val(0);
						$('> .usedResource', this).remove();
						$('> input', this).val(ui.draggable.attr('data-resource'));
						ui.draggable.appendTo($(this)) // ui.draggable is appended by the script, so add it after
						.removeClass(selectedClass).css({
							top: 0,
							left: 0
						});
						noticeUnsavedMatrix();
					}
				}
				else {
					$('> .usedResource', this).remove();
					$('> input', this).val(ui.draggable.attr('data-resource'));
					$(this).append('<div class="usedResource" data-resource="' + ui.draggable.attr('data-resource') + '" style="background-image:url(' + ui.draggable.attr('data-thumb') + ');"><div class="resThumbnailHover"><span class="resTitle">' + ui.draggable.attr('data-title') + '</span></div></div>');
					bindCustomDraggable($('> .usedResource', this));
					noticeUnsavedMatrix();
				}
			}
		});
	});
	
	$('#myModal').modal({
        show: false,
        remote: "{{ path('matrix_edit', {'id': entity.id}) }}"
	});
	$('#myModal').on('show.bs.modal', function (e) {
		$('#indicator').show();
	});
	$('#myModal').on('shown.bs.modal', function (e) {
		$('#indicator').hide();
	});
	
	$('#save-btn').click(function(event) {
		if($("#save-btn").hasClass('btn-info')) {
			$(".loading_indicator_inline").css('display', 'inline-block');

			event.preventDefault();
			$('#matrix_form').submit();
		}
	});
	</script>
{% endblock %}
