{% extends '::layout.html.twig' %}
{# We assume is that the default type is ressources #}
{% set stripBodyHeader = true %}
{% block header %}
<h3 class="page-header" style="margin-top:20px;">
	<div class="row">
	<div class="col-md-7">
		<a title="{{"actions.back"|trans}}" class="btn btn-default" href="{{ backButtonUrl }}" >
			<span class="left glyphicon glyphicon-chevron-left" aria-hidden="true" >
			</span>
		</a>
		{{"search.resultsTitle"|trans}} {{"for"|trans}} "{{query}}"
	</div>
	<div class="col-md-5">
		{# Entity type selection #}
		<div class="btn-group" role="group" aria-label="Type Selection">
			{# Initial button style logic #}
			{% if presentations is empty %}
				{% set pres_style = 'default" disabled' %}
			{% elseif presentations is not empty 
				and resources is not empty %}
				{% set pres_style = 'default' %}
			{% else %}
				{% set pres_style = 'primary' %}
			{% endif %}

			{% set res_style = resources is empty ? 
				'default" disabled' : "default btn-primary" %}
            {% set forum_style = discussions is empty ? 
				'default" disabled' : "default btn-primary" %}

			<button type="button" id="pres_select" class="btn btn-{{pres_style}}" >
				{{"menu.presentations"|trans}} <span class="badge">{{presentations|length}}</span>
			</button>
			<button type="button" id="res_select" class="btn btn-{{res_style}}">
				{{"menu.resources"|trans}} <span class="badge">{{resources|length}}</span>
			</button>
            <button type="button" id="forum_select" class="btn btn-{{forum_style}}" >
				{{"menu.forum"|trans}} <span class="badge">{{discussions|length+comments|length}}</span>
			</button>
		</div>
		{# View transformation selection #}
		<div class="btn-group pull-right" role="group" aria-label="View Selection">
			<button type="button" class="btn btn-default" id="list_view">
				<span class="glyphicon glyphicon-th-list"></span>
			</button>
			<button type="button" class="btn btn-default btn-primary" id="mosaic_view">
				<span class="glyphicon glyphicon-th-large"></span>
			</button>
		</div>
	</div>
</div>
</h3>
{% endblock %}

{% block body %}
<div id="resources_container_header" class="epsilon" style="display: none;">
	<div class="panel panel-default">
		<div class="panel-heading">
			<div class="row">			
				<div class="col-md-6">{{ 'table.title'|trans }}</div>
				<div class="col-md-2">{{ 'table.type'|trans }}</div>
				<div class="col-md-2 text-center">{{ 'table.duration'|trans }}</div>
				<div class="col-md-2 text-center">{{ 'table.action'|trans }}</div>
			</div>
		</div>
	</div>	
</div>
<div id="resources_container">{% for r in resources %}{% include "VMBResourceBundle:Resource:resourceVignette.html.twig" with {'entity' : r, 'nbPerPage' : 12, 'page':1} %}{% endfor %}</div>
<div id="presentations_container_header" class="epsilon" style="display: none;">
		<div class="panel panel-default">
			<div class="panel-heading">
				<div class="row">			
					<div class="col-md-4">{{ 'table.title'|trans }}</div>
					<div class="col-md-1 text-center">{{ 'table.duration'|trans }}</div>
					<div class="col-md-2 text-center">{{ 'table.author'|trans }}</div>
					<div class="col-md-2 text-center">{{ 'table.matrix'|trans }}</div>
					<div class="col-md-2 text-center">{{ 'table.action'|trans }}</div>
				</div>
			</div>
		</div>	
</div>
<div id="presentations_container">{% for p in presentations %}{% include "VMBPresentationBundle:Presentation:presentationVignette.html.twig" with {'entity' : p, 'nbPerPage' : 12, 'page':1} %}{% endfor %}
</div>

<div id="forum_container">

	   
			
				<div class="row">
	        	</div>

<ul class="list-group" id="sortable">
{% for d in discussions %}
<li class="list-group-item row">
<div>
                
                <div class="col-md-8"><a href="{{ path('discussion_show', { 'id' : d.id })}}" title="">
                {% if d.state == 1 %}
                [{{'forum.resolved'|trans }}]
                [{{d.topic}}]{{ d.title|truncate(45) }}
                {% else %}
                [{{d.topic}}]{{ d.title|truncate(45) }}
                {% endif %}
                </a></div>

				<div class="col-md-2">{{ d.getUser.toString }}</div>
				<div class="col-md-2">{{ d.date|date('d/m/y') }}</div>
                
                </div>
</li>
{% endfor %}</ul>
<ul class="list-group" id="sortable">
{% for c in comments %}
<li class="list-group-item row">
<div>
                
                <div class="col-md-8"><a href="{{ path('discussion_show', { 'id' : c.discussion.id })}}" >{{ c.discussion.title }}</a></div>
				<div class="col-md-2">{{ c.getUser.toString }}</div>
				<div class="col-md-2">{{ c.date|date('d/m/y') }}</div>
                
                </div></li>
{% endfor %}</ul>
</div>

{% if presentations is empty and resources is empty and discussions is empty and comments is empty%}
<div class="col-md-12 text-center">
	<h1><em>{{ 'search.no_results'|trans }}</em>
	</h1>
	<br/><br/>
</div>
{% endif %}
{% endblock %}

{% block script %}
	{{parent()}}
	{# TODO: Include caddy.js 
	   Can expose routes in JS with https://github.com/FriendsOfSymfony/FOSJsRoutingBundle
	#}
	<script type="text/javascript">
	const LST_SWITCH = 0; 
	const MOZ_SWITCH = 1;
	const RESS_SWITCH = 0; 
	const PRES_SWITCH = 1;

	var entity_ctnr = ["#resources_container", "#presentations_container"];
	// Switch values kept up-to-date
	var view_switch; 
	var typ_switch;
	/**
	 *	Usage: 
	 *	tmpl_matrix[typ_switch][view_switch] -> html boilerplate template
	*/
	var tmpl_matrix = [['{% include "VMBResourceBundle:Resource:resourceListItem.html.twig" %}','{% include "VMBResourceBundle:Resource:resourceVignette.html.twig"%}'],['{% include "VMBPresentationBundle:Presentation:presentationListItem.html.twig" %}','{% include "VMBPresentationBundle:Presentation:presentationVignette.html.twig" %}']];
	var buffered_content = new Array(2);
	/**
	 * Results Json Objects
	 *
	**/
{% spaceless %}
	var results = {
		presentations_container : [
	{% for p in presentations %}
		{
			id: "{{p.id}}",
			title : "{{ p.title | shortenText(60, "...") }}",
			duration : "{{p.durationToString}}",
			author : "",
			matrix : "",
		},
	{% endfor %}],
		resources_container : [
		{% for r in resources %}
		{ 
			id : "{{r.id}}", 
			title : "{{ r.title | shortenText(60, "...") }}",
			description : "{{ r.description | shortenText(160, "...")  }}",
			glyphicon : "{{r.getGlyphicon}}",   
			thumbPath: "{{ asset(r.getThumbsPath) }}", 
			duration : "{{r.durationToString}}",
			isBkmarked : "{{app.user.resourceIsInCaddy(r)}}",
			indexation: {
				is_indexed : "{{r.indexed}}",
				topics : [
				{% for t in r.topic %}{ 
						title : "{{t.title}}"
						{% if t.ontologies is not empty %}, 
						onts : 
							{% for o in t.ontologies %}
								{ id : "{{o.id}}", name : "{{o.name}}"}
							{% endfor %}
						{% endif %}}
				{% endfor %} ]
				}
			},
{% endfor %} ]
    resources_container : [
		{% for d in discussions %}
		{ 
			id : "{{d.id}}", 
			title : "{{ d.title | shortenText(60, "...") }}",
			description : "{{ d.description | shortenText(160, "...")  }}",
			},
{% endfor %} ]
	};
{% endspaceless %}

	// Initialize UI with Resources as Mosaic
	$(function(){
		buffered_content[LST_SWITCH] = $(entity_ctnr[LST_SWITCH]).html();
		buffered_content[MOZ_SWITCH] = $(entity_ctnr[MOZ_SWITCH]).html();
		switchTyp(RESS_SWITCH);
		switchView(MOZ_SWITCH);
	});
	// Entity type selection
	$("#pres_select").on('click', function(){
		switchTyp(PRES_SWITCH);
	});

	$("#res_select").on('click', function(){
		switchTyp(RESS_SWITCH);
	});
	// View transformation
	$("#list_view").on('click', function(){
		switchView(LST_SWITCH);
	});
	$("#mosaic_view").on('click', function(){
		// Hide both table headers (epsilon : dummy class)
		$(".main_body > .epsilon").hide();
		switchView(MOZ_SWITCH);
	});

	function switchView(to)
	{
		var view_selectors = ["#list_view", "#mosaic_view"];
		$(view_selectors[to]).addClass("btn-primary");
		$(view_selectors[1-to]).removeClass("btn-primary");
		
		// Update current view value
		view_switch = to;
		/* Populate & Attach new list content to container */
		if(view_switch == LST_SWITCH)
		{	
			// Toggle active view table header
			$(entity_ctnr[typ_switch]+"_header").show();		
			$(entity_ctnr[1-typ_switch]+"_header").hide();	
			// Listify
			var baked_content = '<ul class="list-group" id="sortable">';
			var which = entity_ctnr[typ_switch].substring(1); // removing trailing "#"
			var res_arr = results[which];
			for(item in res_arr) {
				baked_content += nano(tmpl_matrix[typ_switch][view_switch], res_arr[item]);
			}
			baked_content += '</ul>';
			$(entity_ctnr[typ_switch]).html(baked_content);
		} else
		{
			// Use buffered content
			$(entity_ctnr[typ_switch]).html(buffered_content[typ_switch]);
		}
	}

	function switchTyp(to)
	{
		var bt_selectors = ["#res_select", "#pres_select", "#forum_select"];
		$(bt_selectors[to]).addClass("btn-primary");
		$(bt_selectors[1-to]).removeClass("btn-primary");

		$(entity_ctnr[1-to]).hide();
		$(entity_ctnr[to]).show();

		// Update current entity value
		typ_switch = to;

		switchView(view_switch);
	}
	/** 
	 * Nano Templates - https://github.com/trix/nano 
	 *
	**/
	function nano(template, data) {
		return template.replace(/\{([\w\.]*)\}/g, function(str, key) {
			return data[key];
			/*
			var keys = key.split("."), v = data[keys.shift()];
			for (var i = 0, l = keys.length; i < l; i++) v = v[keys[i]];
				return (typeof v !== "undefined" && v !== null) ? v : "";
			*/
		});
	}
	</script>
{% endblock %}